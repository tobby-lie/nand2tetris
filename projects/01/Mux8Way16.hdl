// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/*
* Mux8Way16 gate
*   if sel == 000 then out = a
*   if sel == 001 then out = b
*   if sel == 010 then out = c
*   if sel == 011 then out = d
*   if sel == 100 then out = e
*   if sel == 101 then out = f
*   if sel == 110 then out = g
*   if sel == 111 then out = h
*
* Bracket style, start with four Mux where sel[0] determines the winner of each
*   bracket, two more Mux are used in conjunction with sel[1] to determine two
*   finalists, a final Mux then uses sel[2] to determine the winner of the final
*   bracket
*/

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16], e[16], f[16], g[16], h[16], sel[3];
    OUT out[16];
    PARTS:
    Mux16(a=a, b=b, sel=sel[0], out=aMuxb);
    Mux16(a=c, b=d, sel=sel[0], out=cMuxd);
    Mux16(a=e, b=f, sel=sel[0], out=eMuxf);
    Mux16(a=g, b=h, sel=sel[0], out=gMuxh);
    Mux16(a=aMuxb, b=cMuxd, sel=sel[1], out=aMuxbMuxcMuxd);
    Mux16(a=eMuxf, b=gMuxh, sel=sel[1], out=eMuxfMuxgMuxh);
    Mux16(a=aMuxbMuxcMuxd, b=eMuxfMuxgMuxh, sel=sel[2], out=out);
}

